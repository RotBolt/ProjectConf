/*
 *  Created by Rohan Maity on 11/1/21 3:19 PM
 *  Copyright (c) 2021 . All rights reserved.
 *  Last modified 11/1/21 3:12 PM
 */

apply plugin: 'jacoco'

task jacocoReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    group = 'Reporting'
    description = 'Generate Jacoco coverage reports'
    reports {
        xml.enabled = true
        html.enabled = true
    }
    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', 'android/**/*.*', '**/Lambda$*.class',
                      '**/Lambda.class', '**/*Lambda.class', '**/*Lambda*.class', '**/*Lambda*.*', '**/*Builder.*', '**/*_MembersInjector.class',
                      '**/*_MembersInjector*.*', '**/*_*Factory*.*', '**/*Component*.*', '**/*Module*.*']

    def debugTree = fileTree(dir: "$project.buildDir/tmp/kotlin-classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    afterEvaluate {
        sourceDirectories.setFrom([mainSrc])
        classDirectories.setFrom([debugTree])
        executionData.setFrom(fileTree(dir: project.projectDir, includes: ['**/*.exec', '**/*.ec']))
    }
}