/*
 *  Created by Rohan Maity on 11/1/21 3:19 PM
 *  Copyright (c) 2021 . All rights reserved.
 *  Last modified 11/1/21 3:12 PM
 */

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'jacoco'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}

apply from: 'jacoco.gradle'

jacoco {
    toolVersion = "$jacoco_version"
}

android {
    compileSdkVersion rootProject.ext.compile_sdk_version
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "io.rot.labs.projectconf"
        minSdkVersion rootProject.ext.min_sdk_version
        targetSdkVersion rootProject.ext.target_sdk_version
        versionCode 1
        versionName "1.0.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"]
            }
        }
    }

    buildTypes {
        debug {
            testCoverageEnabled = true
            buildConfigField("String", "BASE_URL", "\"https://raw.githubusercontent.com/tech-conferences/conference-data/master/conferences/\"")
        }
        release {
            minifyEnabled true
            shrinkResources true
            buildConfigField("String", "BASE_URL", "\"https://raw.githubusercontent.com/tech-conferences/conference-data/master/conferences/\"")
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    aaptOptions {
        cruncherEnabled = false
    }

    testOptions {
//        For Roboelectric tests
//        execution 'ANDROIDX_TEST_ORCHESTRATOR'
        animationsDisabled true

        unitTests {
            returnDefaultValues = true
            includeAndroidResources = true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    // Core KTX
    implementation "androidx.core:core-ktx:$core_ktx_version"

    // Android support lib
    implementation "androidx.appcompat:appcompat:$app_compat_version"

    // Material design
    implementation "com.google.android.material:material:$material_version"

    // RecyclerView
    implementation "androidx.recyclerview:recyclerview:$support_lib_version"

    // CardView
    implementation "androidx.cardview:cardview:$support_lib_version"

    // SwipeRefreshLayout
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$support_lib_version"

    // Constraint Layout
    implementation "androidx.constraintlayout:constraintlayout:$constraint_version"

    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    kapt "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    // Dagger
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    //Reactive
    implementation "io.reactivex.rxjava2:rxjava:$rxjava_version"
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid_version"

    // Networking
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    implementation "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0"

    // Database
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-rxjava2:$room_version"

    // Work
    implementation "androidx.work:work-runtime:$work_version"
    implementation "androidx.work:work-rxjava2:$work_version"


    // glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    // shimmer
    implementation "com.facebook.shimmer:shimmer:$shimmer_version"

    // Progress Loader Lib
    implementation "com.wang.avi:library:$avi_version"

    // Custom tabs
    implementation "androidx.browser:browser:$custom_tabs_version"

    // Logger
    implementation "com.jakewharton.timber:timber:$timber_version"

    // Parser
    implementation "com.google.code.gson:gson:$gson_version"

    // Local Unit tests
    testImplementation "junit:junit:$junit_version"
    testImplementation "org.mockito:mockito-core:$mockito_version"
    kaptTest "com.google.dagger:dagger-compiler:$dagger_version"
    testImplementation "android.arch.core:core-testing:$core_testing_version"
    testImplementation "org.hamcrest:hamcrest-library:$hamcrest_version"

    // UI Testing
    androidTestImplementation "androidx.test:runner:$test_runner_version"
    androidTestImplementation "androidx.test.ext:junit:$test_ext_runner_version"
    androidTestImplementation "androidx.work:work-testing:$work_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espresso_version"
    androidTestImplementation "org.mockito:mockito-core:$mockito_version"
    debugImplementation "androidx.fragment:fragment-testing:$fragment_version"
    kaptAndroidTest "com.google.dagger:dagger-compiler:$dagger_version"


    // firebase dependencies
    implementation platform("com.google.firebase:firebase-bom:$firebase_version")
    implementation 'com.google.firebase:firebase-crashlytics-ktx'

}